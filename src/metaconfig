# -*-ruby-*-

module RubyCocoaConfig
  eval File.open('VERSION'){|f|f.read}

  module_function

  def libruby_path
    path = File.join(Config::CONFIG['libdir'], Config::CONFIG['LIBRUBY'])
    unless File.exist?( path ) then
      path = File.join(Config::CONFIG['archdir'], Config::CONFIG['LIBRUBY_A'])
    end
    # On Panther, /usr/lib/ruby reports wrong CONFIG
    unless File.exist?( path ) then
      path = File.join(Config::CONFIG['libdir'], 'libruby.dylib')
    end
    return path
  end

end

### install destination ### 

add_path_config 'install-root', '',
  'path to the root directory for Frameworks and "ProjectBuilder Extras"'

add_path_config 'frameworks', '/Library/Frameworks',
  'path to the directory for installing RubyCocoa.framework'

if File.exists?('/Developer/Applications/Project Builder.app') then
  add_path_config 'projectbuilder-extras', '/Developer/ProjectBuilder Extras',
    'path to the directory for "Project Bulder Extras"'
end 

if File.exists?('/Developer/Applications/Xcode.app') then
  add_path_config 'xcode-extras', 
    '/Library/Application Support/Apple/Developer Tools',
    'path to the directory for "Xcode Extras"'
end 

add_path_config 'examples', '/Developer/Examples',
  'path to the directory for Examples'

add_path_config 'documentation', '/Developer/Documentation',
  'path to the directory for Documentation'

add_config 'framework-name', 'name', 'RubyCocoa',
  'real name for RubyCocoa framework'

### build configuration ### 

# Xcode 2.2 moved ruby.h, but ruby command reports old path.
unless File.exists? File.join(Config::CONFIG['archdir'], 'ruby.h')
  Config::CONFIG['archdir'] = Config::CONFIG['archdir'].sub(/powerpc/, 'universal')
end
add_path_config 'ruby-header-dir', Config::CONFIG['archdir'],
  'path to the ruby header directory'

add_path_config 'libruby-path', RubyCocoaConfig.libruby_path,
  'path to the libruby file'

if `/usr/bin/uname -r`.to_f >= 8.0
  add_bool_config 'build-universal', false,
    'yes, build universal binary (requires Xcode 2.1 or later and SDK)'
end

### versioning ### 

add_config 'rubycocoa-version', 'name', 
  RubyCocoaConfig::VERSION + RubyCocoaConfig::STAGE,
  'RubyCocoa version'

add_config 'rubycocoa-release-date', 'name', 
  RubyCocoaConfig::RELEASE_DATE, 'RubyCocoa release date'

