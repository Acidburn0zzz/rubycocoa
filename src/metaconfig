# -*-ruby-*-

module RubyCocoaConfig
  eval File.open('VERSION'){|f|f.read}
end

if File.exists?('/Library/Frameworks') then
  libtype = 'cocoa';
elsif ENV['GNUSTEP_ROOT'] then
  libtype = 'gnustep';
else
  puts "Cannot determine Objective-C library type"
  exit 1
end

add_config 'libtype', 'name', libtype, 'Objective-C library type'

libruby_path = File.join(Config::CONFIG['libdir'], Config::CONFIG['LIBRUBY'])
unless File.exist?( libruby_path ) then
  libruby_path = File.join(Config::CONFIG['archdir'], Config::CONFIG['LIBRUBY_A'])
end
# On Panther, /usr/lib/ruby reports wrong CONFIG
unless File.exist?( libruby_path ) then
  libruby_path = File.join(Config::CONFIG['libdir'], 'libruby.dylib')
end

add_path_config 'install-root', '',
  'path to the root directory for Frameworks and "ProjectBuilder Extras"'

add_path_config 'frameworks',
  libtype == 'cocoa' ? '/Library/Frameworks' : "#{ENV['GNUSTEP_ROOT']}/Local/Library/Frameworks",
  'path to the directory for installing RubyCocoa.framework'

if File.exists?('/Developer/Applications/Project Builder.app') then
  add_path_config 'projectbuilder-extras', '/Developer/ProjectBuilder Extras',
    'path to the directory for "Project Bulder Extras"'
end 

if File.exists?('/Developer/Applications/Xcode.app') then
  add_path_config 'xcode-extras', 
    '/Library/Application Support/Apple/Developer Tools',
    'path to the directory for "Xcode Extras"'
end 

developer_prefix = libtype == 'cocoa' ? '' : "#{ENV['GNUSTEP_ROOT']}/Local"

add_path_config 'examples', developer_prefix+'/Developer/Examples',
  'path to the directory for Examples'

add_path_config 'documentation', developer_prefix+'/Developer/Documentation',
  'path to the directory for Documentation'

add_config 'framework-name', 'name', 'RubyCocoa',
  'real name for RubyCocoa framework'

add_path_config 'ruby-header-dir', Config::CONFIG['archdir'],
  'path to the ruby header directory'

add_path_config 'libruby-path', libruby_path,
  'path to the libruby file'

add_config 'rubycocoa-version', 'name', 
  RubyCocoaConfig::VERSION + RubyCocoaConfig::STAGE,
  'RubyCocoa version'

add_config 'rubycocoa-release-date', 'name', 
  RubyCocoaConfig::RELEASE_DATE, 'RubyCocoa release date'

